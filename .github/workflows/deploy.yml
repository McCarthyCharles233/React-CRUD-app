name: Deploy to ECS (Monolith)

on:
  push:
    branches: [main]

env:
  AWS_REGION: eu-north-1
  ECR_FRONTEND: 729033428962.dkr.ecr.eu-north-1.amazonaws.com/frontend
  ECR_BACKEND: 729033428962.dkr.ecr.eu-north-1.amazonaws.com/backend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push frontend image
      run: |
        docker build -t $ECR_FRONTEND ./frontend
        docker push $ECR_FRONTEND

    - name: Build and push backend image
      run: |
        docker build -t $ECR_BACKEND ./backend
        docker push $ECR_BACKEND

    - name: Prepare task definition with new images
      id: render-task
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: infra/ecs-task-definition.json
        container-name: frontend
        image: ${{ env.ECR_FRONTEND }}
        overrides: |
          [
            {
              "name": "backend",
              "image": "${{ env.ECR_BACKEND }}"
            }
          ]

    - name: Deploy to ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        cluster: ${{ secrets.ECS_CLUSTER_NAME }}
        service: ${{ secrets.ECS_SERVICE_NAME }}
        task-definition: ${{ steps.render-task.outputs.task-definition-arn }}
